Release 0.14 - 06 April 2015 

Overview:

    * Embedded dependencies (resources, dlls) into portable executable 
    * Add libasync for io (network io only for now)
    * Support for opening another dub project
    * New command for setting up a deadcode dev environment.
    * Basic text indent and comment region
    * Now builds on linux (but crashes)

Changes:

    36829fe Use new 'portable' version flag for using pack files and not the release version flag.
    d4fe3ad Use yielding setCurrentDirectory in deadcodedev extension.
    bf9e2b6 Make shutdown of dcd-server more stable. 
            Make dcd-server start get import paths from dub extension. 
            Make completion extension respond to binaries dir changes.
    72ffc1d Rename DubProject to DubPackage. 
            Improve dub format compliance. 
            Make dub extension respond to current dir changes.
    c11d674 BasicExtensions are now singletons
    a5233f2 New signal for working directory changes.
    09233ef Move regular timeout check to prevent crash.
    53a8d16 Support for base path for binaries.
    fb11677 Use global gui event handler instead on window event handler.
    e9135a2 Stop asyncio worker before exit to prevent hang.
    5514123 Set log file.
    969d299 Support for global gui event interseption.
    fdfc8ff Refactor start/stop sprite anim on style. 
            Made change in vwidget isibility start/stop anim on widget.
    47f3c0f Support for stopping asyncio worker
    965a8cd Helper to get CommandParameter array from cmd name and arg string.
    5e633a0 Add more nothrow
    3428751 Support for command arguments for MenuItem attribute.
    2192b95 Add more nothrow @safe
    f44efef Support for logging to file in addition to in editor log widget.
    3dc5778 Add more nothrow @safe
    0a13d83 Less busy repaint
    96424aa Support for building other packs than resources. 
            New binaries pack with the dcd-server.
    d2d2463 Add temporary hardcoded paths to unittest single file build
    e07f984 Styling for Notice widget
    157a696 Visibility property on default stylesheet.
    24a7545 Make menu taller
    0b1b6a3 Visible flag cleanup
    00e71eb Add async worker thread for io based on libasync. 
            Add generic yield fiber on work to thread. 
            Add getConfig for an extension to get some config. 
            Add showFolderSelector that yields until a folder is selected. 
            Add download() that yields until done. 
            Change deadcodedev extension to use new asyncio and folder selection.
    2751228 Add support for adding progress on a future. 
            Add support for then() on future. 
            Made future/promise thread safe.
    a516ccc Add linasync as dependency
    479825f Support for interpolating CSSVisibility
    0794117 Fix to make compile with new dmd 2.067 version.
    93df423 Fix timeout callback to work correctly after main loop has been blocked
    5cfef8e Do not use C style array decl
    09bf4cc Support for visibility attribute in CSS style
    4448568 Break glyph locating loop on invalid rect
    240a257 Fix to make compile with new dmd 2.067 version.
    b278788 Method to check if a rect has all corners in the same point
    ddc60b1 Build fixes for linux from Ketmar. Thx!
    129497b Make build on windows after linux branch merge
    e471014 Merge linux branch
    62f8523 Basic text indent and commenting extension
    9cfa909 Missing basic commands extension
    db2b1f2 Initial code for deadcodedev extension
    c2c67af Cleanup dub.json and add win32 import path on windows. 
            Add prebuild command in release builds to create resources pack. 
            Set Unicode version flag on builds.
    4282f8c Win32 imports
    0cab112 Do not use hardcoded resource in text renderer but use builtin instead.
    e9e03da Use resource pack in release mode
    15738ec Use module load and pack on initialization.
    7574c59 New Pack class that can pack e.g. resource into executable and unpack when needed.
    c8fab7c New module loader class that can load a dll from embedded array or file
    46fdee0 Remove unused resource files
    643f5d3 win.def file to allow for console less app.
    bbd297a Material factory from texture
    05c53ff Builtin textures doesn't load from file anymore.
    29a55a7 Use refactored cursor position function.
    4b5f639 Fix weird bug not triggered on window but on posix
    794169a Support for showing a folder selection dialog in windows
    efbd6e7 Get cursor support moved to platform folder
    618a654 Semantic version support
    703e61c Make dcd server process handling more stable
    a82cfb9 Use winmain for windows in order to start deadcode without a console window.
    27192ab Support for unittesting a single source file. 
            Support for generating resource pack. 
            Embed dcd-server.exe in distribution.
    806c835 Linux build fixes for signals
    c7e25c8 Fixes for linux
    8898100 Compiles and link on linux
    c26be37 Delete dteam.userprefs
    6da0acc Fix spelling error
    5092b04 Added dcd server
    b75d536 Info about trello access
    8810c5e Readme and license info


Release 0.13 - 14 March 2015 

Overview:

    * Incremental search
    * Jump to definition/symbol dlang
    * Auto complete dlang
    * Jump to next compile issue
    * Auto indent
    * Undo stack replace with VIM like undo tree
    * Support for undo groups
    * Expose text highligting to extension
    * Sprite animation
    * Key binding file with support for rule when a binding is active
    * General polish and improvements
    * Lots of fixes

Changes:

    3b38db9 Support for undo groups. 
            Support for extensions to add fields of objects to be bound to gui controls. 
            No more magic int.min used for invalid index but a InvalidIndex instead. 
            Support for isVisible on stylable to disable animation etc. when not visible. 
            New generic text highlighted. 
            Moved selection highligthing to generic text highlighter. 
            Fix glyphAt method. 
            Support for sprite animations through css.
            Tons of attribute tightening. 
            Convenient overridePos on widget to override css computed position. 
            Fix bunch outdated unit tests. 
            Updated default stylesheet. 
            Added selection stack action to explicitly remember selection which can be convenient for extension commands. 
            Explicitly remember selection region on commands that can modify the selection. 
            Made RegionView detachable from BufferViews. 
            A BufferView now knows about all RegionViews associated with it. 
            Added a fileName to bufferview for convenience. 
            Fix selection setting logic in bufferview. 
            Exposed push and pop selection on bufferview. 
            Added a couple of method on bufferview to center on char/line either paged or not. 
            The undo system is now based on a undo tree and not an undo stack just like vim. 
            Added a bunch of text manipulation function to bufferview. 
            Added regex search to bufferview. 
            Improved navigation and searching by making it easier to specify what text boundary to get. 
            Support for classifying an index. 
            Support for expanding selection by class. 
            TextBuffer much more resilient to invalid indexes. 
            Add id to a textbuffer. 
            TextEditor support for onChanged and onGlyphMouseUp signals. 
            TextEditor add easy support for named highlighting regions. 
            Add support for completion session in command buffer. 
            Add support for incremental search with highlighting. 
            Add support for reading keybindings from file including rules for when a binding is active. 
            Add support for jump to next compile issue when compiling D. 
            Show shortest possible unique name when showing buffer toggle list.
    75f54f1 Fix double/triple mouse click timing. Fix finding mouse click widget of overlapping widgets.
    3783fc1 Spelling error in comment
    bc1cb61 Auto indent for D. Update dfmt integration to updated dfmt.
    8522d81 Make D check work with new dparser
    d14d90f Fix signalling end of compile
    501c4ac Update dfmt.d from upstream.
    dec1da9 Disable unneeded unittest
    65332c9 Make textfield constructor consistent. Get rid of custom preferredSize calculation.
    d31198f Add hasDerivedMember template
    719571a Comment animators
    9220997 Fix compile verbosity
    4dc71bd Comment animation package
    803e93e Remember previous active buffer
    48f413d Fix constructor for consistency
    70b8005 Add support for focusWidget, languageName, focusWidgetBranchNames in EnvRule
    1718cc5 Support stepped animation
    008404d Remove dead file
    f281f3c Border png file to highlight compile errors in errorlist
    9880060 Add support to automatically bind object fields to widget controls.
    6757990 Config extension to reload bindings
    64be022 Basic extension for root editor commands
    ec0b568 Autocomplete support for D using DCD
    e29c796 New proc extension to filter text/selection through external shell script
    1fd2d0d Add new string utils with initial support for uniquePostfixPath for a range of names
    f0ed107 Add new popup control
    fff8298 Move extensions common import out of libdeadcode and into extensions package
    247f9a0 Add callback support in css manager to let other add custom css properties when manager is initialized.
    348782d opEqual support for keybinding rulesets
    d9a5337 Support unload for a generic resource
    4347261 Make unload not final on a resource so that derivatives can do correct  unloading.
    7924ab9 Fix crash when no texture was set on ninepatch sprite.
    62f07a6 Fix gridlayout to handle min/max/preferred sizing.
    3533618 Add concept of completion session to a command
    66e202c Default expose textfield and dragger to extensions.
    254e7b5 Less verbose compile output when compiling extensions
    a007ae0 Fix extension attribute accessibility check
    b12e51e Support for replacing and removing keybindings. Add signal to keybindingset to know when it gets cleared.
    aa83623 Fix handling of empty command arguments.
    f2b1077 Fix unittest
    8c9e67c Add dragger bool property but currently not doing anything. Fix dragging.
    884ae71 Add support for bool css property.
    dd3607e Add Region begin and end properties. Fix attributes on some Region methods. Fix tests on Region. Add opSlice to RegionSet.
    c5908f3 Fix test
    97c2360 Add AssertRanges support
    af5d289 Initial but unused support for jobobjects to automatically kill child processes on exit
    b31adb3 Make tool generate and upload docs
    ce33a24 Add name for a CodeModel
    a0e32ac Fix leak in renderqueue
    ddac892 Move jsonx to utils
    f149c3f Support for min/max/preferred sizes
    d1a5e81 Dub ddox target and new msgpack dependency
    33b0112 Update gitignore
    f12ec03 Clean up
    8a85429 Add needed dlls for windows
    b79c83c Proper path handling
    fe8f5d2 Proper path handling
    7484b5e Throw on data error
    b3a203b Moved image file to resource folder
    b2c0361 Missing image file
    6d05619 Missing file


Release 0.12 - 01 Febrary 2015 

Overview:

    * Extensions: D formatting, EOL display, Deaccode debug
    * Improve and extend CSS layout and styling algorithms
    * Performance improvements
    * Many fixes

Changes:

    d070882 Show eol extension
    65a9a5d dfmt addition to d integration.
    a56c0f4 Extension to help debug deadcode itself.
    cc031c7 Editor config file
    6b70a4a Updated stylesheet for new features and fixes.
    79b8389 Disable some unused code.
    8176a09 Use proper containing element to calculate pct. widths and positions.
    2d83d61 Reused css rule matching arrays. 
            D Class match specificity now dependent on depth of match in inheritance hierarchy.
            Only fetch style once per update in text selection model.
    5d345cf Updates for new layout style.
    5ed6bfc _.d to package.d fix.
    f582511 Make text selection model more GC friendly.
    d906cba Support for z-index css property.
    774732a Make getWidget() convenience method on GUIApplication. 
            Changes to make auto positioning work with new layout handling.
    704ef03 Expose active window on guiapplication
    e6058fb Make common timeout tasks into one to reduce wakeups of application.
    8f6e475 Fix selecting end of line not selecting start of next line in some cases.
    3d9ffa8 Add generic line anchor to texteditor.
    3818947 Fix crash in line anchor code.
    c15992c Make the activation button of the menu able to move the window.
    0f3d828 Add normal button and derive that and togglebutton from common base.
    df31cb8 Enable emacs style cut shortcut
    e09ee16 Use package.d instead of _.d
    ddd9907 Made graphics package not import math._ but math.
    c286ff2 IsIdentical() on vectors.
    cff0a68 Clean up padding calculation a bit.
    7a55833 Fix and optimize timeout() code.
    bb3878b Reuse data buffer for buffer objects in order to reduce GC,
    c7770e7 Fix command auto naming.
    cba5039 Optimize lineCount() on buffer quite a bit. 
            Emit onAnchorRemoved when anchor is excplicitly removed. 
            Add option to specify owner for line anchors when querying a buffer for them.
    0e11897 IsIdentical() on rect
    68078ce Changes to make extension work with new extension api. 
            Migrate to layouts not being a widgetfeature anymore.
            Set lineoffset to 0 before clearing errorlist.
            Use lineanchors for D analysis extensions.
            Fix dirty tracking in textrenderer.
            Fix offsetting prev from index 0 bug in textrenderer.
            Better dirty tracking of style in widgets.
            Layouts now a class of its own and not a widgetfeature.
            Changing widget size does not automatically dirty it anymore.
            Make a single regular check for updates instead of one for each type in guiapplication.
            Make better logic for tree control css classes.
    ede486b Command to create a new extension widget class.
    d8c4b8f Refactor extension module. 
            Add support for only public extension classes being registered.
    aacc818 Update dub to handle dscanner extension
    65b2e17 Renamed package.json to dub.jsons
    6d2c728 Fix selection persisting after deleting selection. 
            Fix cursor position when undoing a selection delete.

Release 0.11 - 17 January 2015 

Overview:

    * Language Intel Framework and initial support for D language
    * Improved extension API
    * Add message filtering to errorlist panel.
    * Much fixing and polish

Changes:

    6b6aade When clicking unittest icon do not position cursor.
    b71cd31 Cleanup
    2e9af03 Find in files extension.
    fa704c7 Stack container
    f147934 WIP visitor class
    989761b Build progress anim icon.
    55a7dc8 Stylesheet update for StatusPanel, ErrorlistWidget in different modes. ToggleButtons on errorlist. AnalysisAnchors. CommandControl. Menu tree.
    c405bfb Make dub extension change size of errorlist depending on build status.
    9ef8a9b Make D styler style on tokenable text.
    526d898 Disable a bunch of debug menu items.
    a76e9e1 Clean up debug messages. 
            Hardcode special case when animating a style to also change style version automatically.
    57c78f3 Make emacs behaviour execute commands using command manager and not commands directly.
    8691310 Add onActivity signal to GUI class.
    f3b729a WIP gc tracker extension.
    8bc666e Added basic D language intel
    4f613ae Add new file command extension.
    5b72098 Move open/save file commands from core to extension.
    c0ad836 Add support for completion functions with automatic parameter type convertions to extension commands. 
            Add support for UDA which signals that a command function must run in a fiber. 
            Added come convenience methods.
    fb7007e Changed GenericResource to have a add and set method where the former only inserts the item if the provided key is not already there.
    28903be Add padding, border size and line height handling to text layouter
    588892c Add new layouts to package module
    482e0c7 Language intel interfaces
    5be8e19 Future class implementation.
    72d025b New GridLayout and StackLayout.
    a138399 std.signals to core.signals
    a52cbbc Added computed style and override style to Widget. 
            Add replaceChild on widget. 
            Add Persist attributes to some widget fields.
    20e3ad0 Clean up log messages. Add more keywords to stylesheet styler.
    e97a802 Add support for scheduling a position to place a widget - used mostly by extension widgets. 
            Add support for prompting async prompting. 
            Support for adding correct code intel when opening a buffer from file.
    d2403ee Make directional layout support both culling and scaling mode.
    b3f2020 Fix depth hit test on widget. Clean up log messages.
    3475383 Fix end of line hit test on TextRenderer to not return beginning of next line. 
            Fix style update refresh on TextRenderer when text or widget layout has not changed.
    2878c0a Disable unused code
    19b6588 Remove debug code
    b34bb52 Add toggles for errors, warnings are messages to errorlist. 
            Make errorlist use statuspanel.
    2d0286b New status panel that can be a container of errorlist and things like that.
    58a1c2e Better handling of automatic name for Commands. 
            Flag in Command if it should be run in a fiber. 
            Make it possible to execute a command by name and params only.
    4b2a46c CommandPanel is now using GridLayout. 
            Support for async promp on CommandPanel. 
            Support for prefix label on CommandPanel.
    eace43b Remove selection range changes when text are modified in TextEditor since that is already handled. 
            Make it possible to unset a text anchor by ID on a TextEditor.
    ffdb870 Changes for buffer actions to make them work with BufferView changes.
    e6772dd Fix buffer overflow on GapBuffer. 
            Add flag on TextBuffer to tell if it is persisted.
    8a17aac Add ID on BufferView. 
            Add ICodeModel on BufferView. 
            Make setting selection also set cursorPoint. 
            Rename transform to map on BufferView.
    6416a6d Made Button work correctly with styling. 
            Added ToggleButton.
    bc685be Add an ID and a version to a Style. 
            Fix unittests for styles. 
            Fix crash when material manager is not set while getting style for widget.
    d5ec9dd Expose text property on Label widget
    fa7665c Decouple TextStyler and TextRenderer. 
            Make DSourceStyler use libdparser TextStylers are now registered and looked up in manager making it possible to do them as extensions. 
            DSourceStyler is now an extension. 
            Automatic detections and convertion to correct argument types when calling a CommandFunction or Command. 
            Get rid of CRTP for BasicCommand and require mixin registerCommands instead. 
            Improve resource loading and exception handling. 
            Move core stuff into libdeadcode making it possible to create a static lib to link with extension ie. fast rebuilds. 
            Add new button control. 
            Add UDA helper functions. 
            Improve const pure and safeness of some functions. 
            GenericResource can now contain multiple objects looked up by index or name.
            Handle restarting editor after rebuild when running through visual studio.
            Support for going to correct column when clicking error message in ErrorList. 
            All non-private function in an extension is now treated as a command ie. no more need to @RegisterCommand!myfunction. 
            Add clip(Region) to Region. 
            Fix crash when reading from an empty IO. 
            Add support for a textrenderer to have no text styler set. 
            Stop propergating click even when clicking a menu item. 
            Handle missing command args for comand called through menu. 
            Make animated page scrolling more responsive. 
            Add toString to Event.
    0698381 Move files


Release 0.10 - 06 November 2014 

Overview:

    * Menu added to top right
    * New fit layouting of widgets
    * @Menu and @Shortcut attribute support for extensions
    * @CommandFunction attibute for using functions as commands
    * Support for general command call and completion on command control
    * Many workflow improvements and fixes

Changes:

    93adc13 Add new free fonts
    0461325 Update default stylesheet to handle improved command control and menu tree
    2f413e4 Add Shotcut and Menu attributes to Dub command
    3a787aa Support for Shortcut attibute to set default shortcut for command extension
            Support for Menuattibute to set menu action for command extension
            Support for using simple function as command extensions
            Support for providing args to menu registered commands
            Session support for command extensions
            Convenience methods for getting TextEditor and Widget on extensions
    aed685f Fix command name for deleteToWordBefore/After
            uint to int index changes in editorcommands
            Animate support for pagedown/up
    7b1c580 Expose Runner for timeline to be able to abort
            Possible to provide curvetype on animate method on timeline
    5af957e Remove cursor from command completion list
            Expand command control on click
            uint to int index changes on command control
    6a55484 Expose keyBindings on EditorBehavior
            Initialize keyBindings eagerly
            Fix name of commands in bindings
    b417397 Make InsertAction and RemoveAction handle selections
            uint to int index changes for bufferviewaction
            Add debug output support of action list
    b42521a Support animation of uint, int and doubles
            Fix const correctness for interpolation
    1e0714e Make use of clean restart api instead of simple exit() in dub extension
    69ee347 Support for global styling in css such as scroll speed
            Use window user data dir instead of all users all data dir
            Do not always open stylesheet in editor
            Support for scheduling a restart of app
            Disable dragger widget
            Enable top right menu
            Add backup of file when first modified
            uint to int index changes for guiapplication
    dd0e67d uint to int index changes to BufferView
            Removed most direct changing of state to go through actions instead
            Add getRegion() to query misc region types
            Added viewOnLine() to buffer view to ensure line in view
            Add lineNumberRelativeToView property to BufferView
            Add replace, getText, transform, wordAtCursor and lineCount, methods to BufferView
    6c315ba Errorlist extension support persisting state across reloads
            Errorlist extension support clicking on errors and goto file and line
            Made errorlist text styling work again
            Made clicking error or warning center online not just jump to line
    ceccd7f Improve unittest extension
            uint to int changes for unittest extension
    45b9226 Make label widget public part of gui package
    e4c8420 Add overWidgetID to mouse events
    7ae8598 uint to int index changes for textrenderer
            Add cursorVisible to textrenderer
            Make textrenderer handle static text in addition to BufferView as source
            Fix layoutSize width calculation of textrenderer
    baec3c6 Fix GUI
            Timeout bug
    16ca4d0 Fix buffer overflow error when getting top KeyBindings from KeyBindingsStack
            Added new keybinding method that accepts default args for the command
    9d8b6b5 Make positioning support fit layout
            Cleanup of positioning logic
    9d2890b Make layout widget features support new fit layout
    0303445 Make layout widget features support new fit layout
    587e437 Changes for widget owning the name itself
            Fix order of widget logic. Fix keyboard focus logic
            Added StylesheetChanged event
    49f2a4b Files create will also create missing parent directories
    c133855 New CommandCall struct
    82de203 Make default command name generation handle classes in packages and functions
            Add execute method to CommandManager accepting a CommandCall
    726ffa4 uint to int index changes for text editor
            Correct focus handling for text editor
            Correct layout logic
            Remove scroll logic and leave that to bufferview
    9f4465d Only show cursor in text fields when the have focus
    f26271d New search extension
            To upper extension in different flavours and needs cleanup
    2fb8f78 New menu control
            New tree control
            New label widget
    1e1693d Method for getting test result for a filename and line number
    208851f Uint to int for indexes changes for Region
    3bf13f1 Make Widget known its own name.Added method attributes
            Fixed deregistering of child removed
            Added getChildByName
            Added intrinsicSize
            Changes to support new fit style layouting
            Other cleanups
    4206038 textlayout uint to int index changes
    0f05cef More uint to int for index changes
    aaeb020 Update styledtext to use int for index
            Fix D code styler to not always style to end of buffer but only end of region
    525723f Add automatic to CSSScale enum
            Fixed isMixed on CSSPosition
    d6e5514 Update unittest to use Stylable instead of Widget directly
    1c2f908 Support for getting default value of custom css property
    2cf89f1 Method attributes added
    54fbffd New fit keyword for width and height
            Method attributes added
    13f0550 Added method attributes and custom page-down-speed css field
    e06e1da Changed buffer offsets to int
            Support for buffer indexes offsetting by lineEnd, wordEnd and unit
            Stabilized gapbuffer to array with bounds clamping
    8023aed Add property to get const manager on resource
    44ededd Add property to resource to get const manager
    2986f1c Add property to get const manager from resources
    4e17589 When cursor is jumping out of view it will now center on screen
    c4a5536 Fix toggleCommandArea command
    069d446 Call correct constructor on CustomCommand base
    2117215 Simplified onMissingCommandArguments signal
            Simplified bindings that toggles the command control since that is handled automatically now on missing args
    9f94af0 Refactor and fix completion logic
            Fix cycle logic
            Fix usage display
    cda398a Simplify cursorToLine command now that completion logic etc. is working
    2a53523 Fix setValues on CommandParamenterDefitions for default values
            Add parseValues
    29d23e6 Add fuzzy lookup by name on CommandManager
            Add getCompletions taking a string
    1bc22db Fix twoline comand control look and transitions


Release 0.9 - 04 October 2014 

Overview:

    * Make layout and styling work together 
    * Get rid of hardcoded transitions and use styling instead
    * Shift click to make selection support
    * Scroll speed not constant by controlled by mouse wheel
    * Initial support for missing parameter fallback to command control (more coming next release)   

Changes:

    1bfdb19 Unittest anchor now only positioned using standard styling and not custom 'offset' style.
            Command control now animated using style transitions instead of animated though code.
            Three modes in command control now oneline, twoline and multiline mode.
            All widgets default to static positioning.
            Style position is also transitionable making it possible to animate between position types. 
            Made a Stylable interface to make it possible for things other than widget to be stylable.
            Made TextSelection stylable. Made TextRendere styleable Made widget either manually layed out or automatic using styling.
            Fix bunch of positioning and sizing bugs.
            Made layout a special phase and not abusing resize event for that anymore.
            Fix bunch of pure nothrow @safe and const correctness.
            Fix directional layout to use layout phase and styling appropriately
            Fix constrained layout to use layout phase
            Made it possible to override duration of a Clip
            Fix animation of constant values that are dependant on animated position
            Made a callback when a command has missing arguments on execution
            Now command must specify types of parameters and possibly default values.
            Fixed focus change when toggling command control.
            Added cursorToLine(lineNum) method to bufferView.
            Mouse over unittest button now shows a hand instead of an arrow.
            Refactor box style positioning code.
            Add bezier interpolation for use with style animations and transitions.
    81517f9 Use selection region with direction. 
            Support shift+click to select region.
            Make scroll speed be reflected when scrolling.
    d417c66 Emacs bindings for page up/down select.
    fef59ae Do not compare to float.nan but use isFinite().
            Make renderer use normalized selection.
            Force cursor visible when text is dirty.
    9d847b6 Change scroll bottom limit to document length plus one screen size.
            Selection changes does call navigated anymore but just sets the dirty flag.
    d640ddf Make text actions use normalized selection
    683eda8 New pagedown select. 
            Change page down to allow for going further that bottom of doc to show a page of empty space.
    70798c4 Add timestamp to Event.
            Add keymod to mouse events.
    a8cfc33 Start support for regions with direction.
            Fix setting regions in holes of RegionSets.


Release 0.8 - 04 September 2014 

- Skipped release in August because of vacation.

Overview:
    
    * Stylesheet cleanup and more properties
    * Style transition support
    * Support for focus pseudo class in stylesheets

Changes:

    d649113 Get rid of StyleFields and move it directly to Style. 
            Support for CSS transitions 
            Support for CSS :focus, left, right, top, bottom, position 
            Support for CSS shorthand syntax Support for cubic bezier curves 
            Added Clips for reusable animation clips. 
            Added test code for unittest handling 
            Added rectStyle on widget that takes CSS into account e.g. transitions
    35be64d Prepare CSS types for transition support
    8afbdba Make texture on font maps NonBindable
    15060f6 Add timeline to Window
    bd529b1 Fix BoxModel initialization
    7727406 HSVA and interpolation support for Color
    cffc6c1 Prepare rect and vectors with Bindable UDA and operators needed by FieldProxy
    8a13354 New ObjectProxy, FieldProxy and Bindable UDA
    8c93495 Clean spaces
    de0580b OpAssign for Events
    5f597b4 Get rid of some log messages


Release 0.7 - 02 July 2014

Overview:
    
    * Stylesheet refactoring and cleanup
    * Support for hover and active pseudo classes in stylesheets

Changes:

    1802308 Overhaul of stylesheet parser Refactor stylesheet code into package and several 
            modules Start of support for transitions and animation in the stylesheets
    5671cd5 Reversed css overlaying application order Support for pseudo classes in css 
            (hover, active for now).
    bef3504 Added mouseOver and mouseDown query methods on widgets and window
    ff38873 Make selection property on BufferView return const Fix selection clearing bugs
    e32149e Clear method on region
    81a5709 Tool command for listing changesets since last tag


Release 0.6 - 13 June 2014

Overview:
    
    * Text line achor support
    * Initial dlang unittest run directly from text buffers
    * Performance optimization for line operations
    * Fixes

Changes:

    ca1f239 Unittest image
    26cf7bf New unittest extension in the works
    0e5e978 Store more info about Asserts in unittests to prepare for own test running 
            Registering of unittests at start
    a6af5bc Fix for getting glyph rect relative to bufferview area 
            Batch updates to TextStylers 
            Fix regions after inserted/removed text in stylers not being offset 
            Support for restyling of a region and not just the entire buffer
    e68b5a7 Subtract region support for region and regionsets
    0676ce9 makeUnion method on Region
    0843c46 Throw attributes added
    dfa64c6 Commenting
    f04a37a Convenience property for text editor in extensions
    35f9d09 Missing import for unittesting
    37878cc Stylesheet updates for TextAnchors
    e5cbc2b Support for line anchors 
            Fixes for LineBuffer event handlers 
            Unittests for LineBuffer 
            Use line offset as offset to render BufferView instead of char offset 
            Add create/destroy signals to BufferViewManager 
            Vec2f parsing support in stylesheets 
            Offset definition support in stylesheets for text anchors 
            Fix analytics thread crash on shutdown
    6bab4fa Support for explicit stop on analytics classes
    48f70b5 Add nothrow attribute
    04473fa Save session upon successful build reload
    40592d7 Refactored copybuffer 
            Renamed TextGapBuffer to TextBuffer 
            Added new LineBuffer used by the TextBuffer for easy/speedy line handling 
            Made all buffer share same copybuffer


Release 0.5 - 02 May 2014

Overview:
    
    * Custom stylesheet properties that extensions can register
    * Open with - using windows context menu
    * Drag'n drop files
    * Persistence of session
    * Double/triple click selection
    * Lots of fixes 

Changes:

    c02c4a0 Use new analytics module to send info about exceptions and startups speed 
            Use new custom stylesheet property to specify expand duration of command dropdown 
            Allow right arrow to complete in command dropdown 
            Use ellipsis on long lines in command dropdown completions 
            Change cursor to IBEAM when over text areas 
            Cursor does not blink while moving it anymore 
            Double and triple click now activates on mouse down and not mouse up 
            Optimized char mouse picking which caused slow selection on the lower part of the screen 
            Add dirty signal to buffer views
            Now a completion entry have both a label and the completion string to use
            Filesystem completions have their common prefix paths stripped
            Project completions have their common prefix paths stripped 
            Errorlist styler up to date with rest of stylers
            Support for dropping file on editor
            Support for generic resource that will serialize into json file to be used for e.g. extensions and editor sessions state
            Get rid of vec3f as color fields and use Color struct instead
            Fix ninepatch model rendering
            Get rid of name on resources and only use handle and uri
            Support for saving resources (current only generic resource supports this)
            Added keyboard(un)focus signals to widget
            Added command callback on widget
            Use ninegrid instead of box renderer for widget backgrounds
            Cull children of directional layout that is out of area
            Support for using relative paths with different bases such as cwd, userdata dir, executable dir, session dir and resource dir
            Use new generic resource for session persistence. Persist open buffers, buffer LRU info and caret positions Make command dropdown longer Make caret blink New TextField control New config module
    6a3c84c New shortcuts for incr find and an additional for undo
    84acb23 Disable unused import
    3955bbe New stylesheet properties: background-color, background-sprite, background-sprite-border. Additionally custom properties can now be registered (only floats and rects for now).
    4d8a4cf New stylesheet changed event
    28549b2 Added analytics support to figure out how the editor is being used and to improve workflow
    42f5ac5 No dependency on sdlang anymore
    70bf694 Correct selectLeft and right across line boundaries
    f2fe616 Integrate system clipboard
    1939a77 Select word on double click and line on triple click
    554f30a New triple click event
    68e40fa Introduce removeRange on buffer that does not take endlines etc. into account but simply removes the range.
    ac17912 Add Locations debug
    c7f8cdd Support C:\ in file protocol handler
    50eb700 Scale support for rects
    2ecdac4 max() support for vectors
    ec2f718 Add win context menu for open in ded on file explorer
    7033401 Clip text editor using scissors
    8f74f75 Improve dev tool with help usage and ability to list published zips


Release 0.4 - 02 Apr 2014

Overview:

    * New extension module for custom extensions to the editor
    * Dub build extension command
    * ErrorList extension widget
    * Quick open files in dub project
    * New dropdown command console with completions
    * Make editor able to edit its own source code, compile and reload
    * Classic buffer cycling defaulting to ctrl+tab and shift+ctrl+tab
    * Styling of editor is now done through stylesheets

Changes:

    71dc1f7 Implement buffer cycling 
            Implement stylesheets for styling and get rid of stylesets (rules, selectors, cascading etc.) 
            Migrate existing code that uses stylesets to stylesheets 
            Add positioning and padding to styles 
            Add inline font and material properties for styles 
            Add directory watcher to automatically reload resources when changed outside editor e.g. stylesheet of the editor itself 
            Add previewing of buffers instead of changing to a buffer for use in bufferCycling
    856a756 New cycleBuffers command shortcuts
    4349aab Make key navigation work in texteditor as widget event command
    703dafa Include current buffer in completions
    63eaa7d Default to blending when creating new models
    c416f38 Move shader and texture into properties on material
    31577de Expose command and keyup callbacks on widget
    12f5cab Make background drawing feature explicit on widgets
    d96a2ca Make shaderprogram more transactional in order for it to be able to reload
    918b2bb Do not use scanprotocol anymore
    f51dbd1 Pick up window focus events and dispatch
    6879665 Let event callback handle window events before dispatching to widgets. This is reversing the old behavior of letting widgets    handle the event first.
    f51fb88 Repaint methods for window to repaint all widgets
    373e6d5 Require rendertargets to have an ID for better encapsulation
    7507ccd Remove unneeded scan protocol after LocationsManager changes
    eed7467 Let directional layout use preferred widget size instead of even split
    8474a91 Simplify LocationsManager by getting rid of its serializer. 
            Require lastModified and size for resource location finding callbacks. 
            Let resources remember who loaded them in order to support reloading.
    f4b8818 Show all tests and not only failing when printing stats
    b9217f5 Remove non-default contructor of Font
    8d371a2 Make builtin texture have a URI in order to reuse it.
    4be7d53 Add toString() to region and regionset. 
            Rename add() to merge() for region set. 
            Add set() for regionset that will not merge a region but overlay/overwrite the region instead. 
            Make intersect3() return a range.
    ab1ce35 New Focus event
    87d8776 Support lazy loading of shaders in materials.
    5e40ed7 Rect.offset() method and RectOffset.reverse() method
    2a3183b Make Shaders more transactional in order to support reload into existing shaders
    20658ca Add AssertIsNot()
    b3ebd33 Font now knows the path it has be loaded from in order to reload.
    0644615 Add all css defined colors by name. 
            Add support for alpha. 
            Add support for HSL colors. 
            Make Color take up less memory.
    4065e91 Stabilize Texture a bit and make it more transactional in order to support reloads into existing Texture
    2f0b05b Add assertions to buffer
    8ae038f Correct URI opEquals(). Add URI.normalize() and URI.uriString()
    2abe26e Improved backgrounds
    5383c19 New resizer image
    61c8055 Emacs keybindings for dub.quickopen
    0a7aeb5 Dub Project extension that reads a dub.json/package.json configurations Dub quick open file command
    c631b9a Changed command box to be narrow and have a dropdown list for completions that is keyboard navigatable.
    a893fc3 Emacs keybindings for quit
    a7e66f2 Assigning bufferOffset will set lineOffset as well. Fix scrollDown()
    a6041a4 Added buffer methods lineEndsAt(), lineEndsAtLineNumber(). 
            Fixes to Buffer.
    3388b1b Move layouting out of TextEditor into GUIApplication that creates the editor Set TextStyler from buffer name ie. filename
    b28aa74 Make app a member field of extension classes
    a8ee30f Do not quit on esc but use a command for that
    0a11bd7 Use style color in TextSelectionModel and not hardcoded color
    a7fd83b Add toVec3f conveniece method to Color class
    0169285 Expose linecount of TextLayout
    ea04725 Add NineGridRenderer to widgetfeatures package
    e296611 Fix center layouting
    d868375 Expose selection style in TextRenderer Cull text layout when lines are out of bounds Default to DefaultStyler instead of DSourceStyler
    f06d25f Dispatch to widgets before onEvent callback on window
    5fc4e24 New DefaultStyler
    8133c0d ErrorList widget extension that can be used by e.g. dub.build command
    4ec3722 Emacs keybindings for dub.build command
    1b01c8d Initial dub extension that adds a dub.build command
    961c845 New extension module for (custom) extensions to the editor
    f7fbcd5 New NineGridRenderer feature
    1ab1b85 Correct method naming for addMessage() Make window show on top of any already existing instance to give the illusion of not restarting after compiling and restarting the editor itself.
    bf22788 Upload changelog as part of 'dist' command Verify that changelog contains a section for the dist version before uploading
    9a02cb3 Offset method for region
    dbff594 onUpdate signal for windows Method window to lookup widget by name Make it globally possible to register a widget with a window
    01df287 Source code wrapping cleanups
    27f598f Added timeout callback support in GUI
    a2229e5 Make name and description into properties instead of fields for Command
    c96bb07 Remove double linesVisible() method on BufferView
    6b5d004 New lineNumberAt, startAtLineNumber and lineContaining methods for buffer
    0490364 tabs to spaces in changelog


Release 0.3 - 28 Feb 2014

Overview:

    * Copy/Paste/PasteCycle support
    * Unicode rendering support
    * Stabilization

Changes:

    f7be8ce Make selection work on scrolled view and while scrolling as well. 
            Fix rendering glich of selection background.
    09b04f3 Fix start/end of line buffer methods
    d623c9c Spelling error in comment
    def26ee Migrate emacs keybindings to simple bindings API. 
            Add emacs bindings for copy/paste/pasteCycle commands.
    a16d96b Expose new BufferView methods as editor commands. Migrate insertNewline command to insert command that accepts a string.
    45c3804 Add offsetByXXX methods to Buffer to make it easy to navigate using common boundaries such as char/word/line/buffer. 
            Migrate last of BufferView methods to BufferViewActions. 
            Migrated BufferView to new offsetBy methods. 
            Added Copy/Paste/PasteCycle/Cut support to BufferView. 
            Exposed selected text in BufferView. Added onCopy signal to BufferView. 
            Tons of fixes to BufferViewAction to properly handle e.g. preferred column. 
            Added lots of unittest to BufferViewActions.
    6dfbe92 Fix issue with text still being drawn in the old style in addition to the new style when it changed style. 
            Also call text layouter to allow it to update fontmaps if necessary.
    3b7476d Add convenience methods to Widget for getting window to world transforms for the widget rect
    e4f4c72 Make TextBoxLayout track fonts that needs to be rebuild because of missing glyphs in the fontmap
    3bf5926 Change clear semantic on graphics buffers to only clear gpu buffers if there are no data pending for the buffer from the cpu
    35a9ffa Let text model return info about missing glyphs in font
    4dc3460 Fix Resource management unit test
    2b3f57c Enable correct dirty tracking for BoxModel
    c121fb8 Allow simpler key binding API
    7edd83e Unicode rendering support for font
    737f247 Better command shortcuts on commandcontrol
    39b0967 Add padding on texteditor content
    04b0401 Clear undo stack after loading file in order not to be able to undo the initial text insert
    9bb31b2 Use test stats module
    b11770e Improve test module with stats
    2eb0db1 Better default font color


Release 0.2 - 17 Feb 2014

Overview:

    * Undo system
    * Dev tool to automatically setup,build,test,dist-upload
    * Mouse click to set cursor
    * Select using mouse/keyboard
    * Text background highlighting
    * Generic 9 patch box model

Changes:

    e923c86 Use textselectionmodel in textrenderer
    223249c Add new default box style
    b1b8026 Always use halfway char method for determining what char index is hit
    958690b Make emacs binding for del key
    bea9159 Make bufferview.remove delete selection instead of next/prev chars if a selection exists.
    aeafc41 Fix reversability of bufferviewactions by setting preferred column. 
            Now using charOffset to offset instead of (a-b) because that will handle newlines properly.
    2b3f3c0 Add convenice function to calculate an uv coord on a texture from pixel offsets. Also exposed size as a Vec2f on texture.
    913a9be Use width of space instead of fontwidth for tabs and spaces. Added new TextSelectionModel for text selections.
    b7db306 Make changes to boxrenderer to accomodate for changes i models.d
    cc52d73 Change shader to support alpha textures
    2acc09b Correct calculation of region end of a layed out line
    f2b291e Refactoring models functions. Added BoxModel for 9 patching
    119d47f Optimize array usage
    c2bb7a3 Allow access to submodel on a model. Hacked support for blend modes
    95dd247 Fixes to buffer.endOfLine/startOfLine
    3bf5e12 Expose renderTarget on window
    acdf51b Added empty() on Rect and new RectOffset type
    4f7facf Added release config
    acaa1f3 Tool support for building specific config
    639f241 Split Editor into TextEditor base and CodeEditor derived classes. 
            Moved styleSet from draw() parameters and into a member field for window. 
            Made onMouseGlyphXXX callbacks on TextEditor Added signals to BufferView for insertions and deletions 
            Added support for grouping a sequence of actions into a single undo step Moved away from std.container.
            Array and use a manual dlinked list instead because the former seems unreliable Support for keyboard selection. 
            Refactoring of textrendering/textlayout to make cleaner cut between layout and rendering and to expose glyph positions for text selections 
            Added getGlyphAt(pos) for textrenderer LRU info for TextEditors owned by GUIApplication 
            Added documentation about the different coord systems used throughout.
    690ba2a added missing abc method for worldToWindow()
    5ba0bf0 Fix worldSizeToPixel,worldToPixelPos and add new worldToWindow for renderwindow
    3ef2b7c Fix bug in text styler when styling last part of text
    ad65d45 Fix style inheritance bugs and added test to style.
    5a9e64d Added vec4f alias
    f3779ac Import Rect.contains to support negative sizes. Added posMax property to Rect.
    ab9c894 Added expansion/contraction of regions based on point of insertion/deletion. 
            Added new intersect method to region that returns the three parts of a intersection. 
            Added length property to region.
    7ad7a12 Fix key sequence matcher with mathing keys but different mods could match wrongly.
    c9ce104 Undo/redo system based on actionstack that can be used for macros later on. 
            Enable unit testing in dub 
            Migrate unittests to test.d framework 
            Fix key sequence matching 
            Fix file protocol url handling and file opening
    5021e2b Improve project tool
    71cd3c6 Better jsonx error messages
    8b8c38d Add git ignore file


Release 0.1 - 02 Jan 2014

    * Initial release

