//
// THIS FILE IS AUTO GENERATED by '<deadcode project root>/tool.bat generateClientAPI'
//
module extensionapi.rpcapi;
public import extensionapi.types;
import extensionapi.rpc;

class Application : RPCProxy {
    int id;
    BufferView previousBuffer() { mixin(RPCProxyMethodMixin); }
    Log log() { mixin(RPCProxyMethodMixin); }
    void setLogFile(string path) { mixin(RPCProxyMethodMixin); }
    void bufferViewParamTest(BufferView b) { mixin(RPCProxyMethodMixin); }
    void addCommand(Command c) { mixin(RPCProxyMethodMixin); }
    void addMenuItem(string commandName, MenuItem menuItem) { mixin(RPCProxyMethodMixin); }
    void addCommandShortcuts(string commandName, Shortcut[] shortcuts) { mixin(RPCProxyMethodMixin); }
    void onFileDropped(string path) { mixin(RPCProxyMethodMixin); }
    void quit() { mixin(RPCProxyMethodMixin); }
    string hello(string yourName) { mixin(RPCProxyMethodMixin); }
    TextEditor getCurrentTextEditor() { mixin(RPCProxyMethodMixin); }
    BufferView getCurrentBuffer() { mixin(RPCProxyMethodMixin); }
    void startExtension(string path) { mixin(RPCProxyMethodMixin); }
    void scheduleCommand(string commandName, string arg1) { mixin(RPCProxyMethodMixin); }
    string getUserDataDir() { mixin(RPCProxyMethodMixin); }
    string getExecutableDir() { mixin(RPCProxyMethodMixin); }
}

class BufferView : RPCProxy {
    int id;
    string name() { mixin(RPCProxyMethodMixin); }
    void beginUndoGroup() { mixin(RPCProxyMethodMixin); }
    void endUndoGroup() { mixin(RPCProxyMethodMixin); }
}

class Command : RPCProxy {
    int id;
    bool canExecute(VariantN!(8u, uint, int, string, float)[] data) { mixin(RPCProxyMethodMixin); }
    void execute(VariantN!(8u, uint, int, string, float)[] data) { mixin(RPCProxyMethodMixin); }
}

class Log : RPCProxy {
    int id;
}

class RemoteCommandRegistrar : RPCProxy {
    int id;
    void addRemoteCommand(string name, CommandParameterDefinition[] paramDefs) { mixin(RPCProxyMethodMixin); }
}

class TextEditor : RPCProxy {
    uint id;
    void value(string txt) { mixin(RPCProxyMethodMixin); }
}

